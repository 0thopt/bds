name: Use MatCUTEst in GitHub Actions

on:
  # Trigger the workflow on push or pull request
  push:
  # Trigger the workflow manually
  workflow_dispatch:

env:
    GFORTRAN_VERSION: 12

jobs:

  test:

    name: Profile blockwise direct search.
    runs-on: ${{matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        solver: ["blockwise_direct_search"]
        solver_label: [GS];
        solver_tag: [GS];
        solver_nb_tag: [n];
        competitor: ["blockwise_direct_search", "newuoa", "matlab_fminsearch", "matlab_fminunc"];
        competitor_label: ["randomized(array)", "newuoa", "simplex", "bfgs"];
        competitor_solver_tag: ["randomized_array", "newuoa", "simplex", "bfgs"];
        competitor_nb_tag: ["n", "no", "no", "no"];

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Clone PRIMA
        uses: actions/checkout@v3
        with:
          repository: libprima/prima
          path: prima

      - name: Clone MatCUTEst
        uses: actions/checkout@v3
        with:
          repository: equipez/matcutest_compiled
          path: matcutest

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3.3.1
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2-beta

      - name: Run tests
        uses: matlab-actions/run-command@v1.2.0
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            % Check the installation
            help matcutest, which('macup'), which('decup'), which('secup')

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            old_path = cd(path_tests)
            parameters.matcutest_github_actions = '/home/runner/.local/matcutest/mtools/src';
            parameters.solvers_invoke = ["blockwise_direct_search", "blockwise_direct_search"];
            parameters.polling_blocks= ["Gauss-Seidel", "Randomized_array"];
            parameters.solvers_label = ["GS", "Randomized(array)"];
            parameters.solver_tag = ["GS", "Randomized_array"];
            parameters.parallel = true;
            testbds_input(parameters)
            path_artifact = pwd;
            cd(old_path)

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: 'bds_new_framework/bds_new_framework/bds_new_framework/tests/testdata'
