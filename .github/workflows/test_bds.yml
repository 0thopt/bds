name: Use MatCUTEst in GitHub Actions

on:
  # Trigger the workflow on push or pull request
  push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 18 * * *'
  # Trigger the workflow manually
  workflow_dispatch:

jobs:

  test:

    name: Demo

    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3.5.2
        with:
          submodules: recursive

      - name: Install ghostscript
        run: sudo apt-get update
             sudo apt-get install ghostscript

      - name: Clone PRIMA
        uses: actions/checkout@v3.5.2
        with:
          repository: libprima/prima
          path: prima

      - name: Clone MatCUTEst
        uses: actions/checkout@v3.5.2
        with:
          repository: equipez/matcutest_compiled
          path: matcutest

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3.3.1
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v2-beta

      - name: Run tests
        uses: matlab-actions/run-command@v1.2.0
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            % Check the installation
            help matcutest, which('macup'), which('decup'), which('secup')

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            cd(path_tests)
            parameters.matcutest_github_actions = '/home/runner/.local/matcutest/mtools/src';
            parameters.solvers_invoke = ["blockwise_direct_search", "blockwise_direct_search"];
            parameters.polling_blocks= ["Gauss-Seidel", "Randomized_array"];
            parameters.solvers_label = ["GS", "Randomized(array)"];
            parameters.solver_tag = ["GS", "Randomized_array"];
            parameters.parallel = true;
            testbds_input(parameters)
            path_artifact = pwd;

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: '/home/runner/work/bds_new_framework/bds_new_framework/bds_new_framework/tests/testdata'
