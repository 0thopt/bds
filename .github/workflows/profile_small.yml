name: Plot performance profiles for BDS, small

on:
  # Trigger the workflow on push or pull request
  push:
  # Trigger the workflow manually
  schedule:
    - cron: '0 22 */7 * *'
  workflow_dispatch:

env:
    GFORTRAN_VERSION: 12

jobs:
  test:
    name: Profile BDS.
    runs-on: ${{matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        matlab: [latest]
        dim: [small]
        with_optim_toolbox: [yes]
        solver: [CBDS]
        competitor: [PBDS, lam]
        random_initial_point: [true, false]

    steps:
      - name: Check version of gcc
        run: gcc --version && exit

      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Clone MatCUTEst
        uses: actions/checkout@v4
        with:
          repository: matcutest/matcutest_compiled
          path: matcutest

      - name: Clone NLOPT
        uses: actions/checkout@v4
        with:
          repository: stevengj/nlopt
          path: nlopt

      - name: Link gfortran for MATLAB on Linux
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/link_gfortran ${{ env.GFORTRAN_VERSION }}

      - name: Install epstopdf and ghostscript
        if: startsWith(matrix.os, 'ubuntu')
        run: bash .github/scripts/install_epstopdf && bash .github/scripts/install_ghostscript

      - name: Install Texlive
        run: sudo apt-get update && sudo apt-get install texlive

      - name: Check whether LaTeX is installed
        run: pdflatex --version

      - name: Cache MATLAB
        id: cache-matlab
        uses: actions/cache@v3.3.2
        with:
          path: ${{ runner.tool_cache }}/MATLAB
          key: ${{ matrix.os }}-${{ matrix.matlab }}-${{ matrix.with_optim_toolbox }}

      - name: Set up MATLAB with optimization toolbox
        if: ${{ matrix.with_optim_toolbox == 'yes' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}
          products: Optimization_Toolbox

      - name: Run test
        uses: matlab-actions/run-command@v1.2.0
        with:
          command: |
            root_dir = pwd()

            % Install MatCUTEst
            cd(fullfile(root_dir, 'matcutest'));
            install(); cd(root_dir);

            % Compile prima
            path_prima = fullfile(root_dir, 'prima');
            cd(path_prima);
            setup

            % Conduct your tests
            path_tests = fullfile(root_dir, 'tests');
            cd(path_tests)
            parameters.problems_dim = "${{ matrix.dim }}";
            parameters.parallel = false;
            parameters.is_noisy = false;
            parameters.fmin_type = "randomized";
            parameters.random_initial_point = ${{ matrix.random_initial_point }};
            parameters.maxfun_factor = 1e3;

            % Establish parameters for solvers.
            solver1.solver = "cbds";
            solver1.sufficient_decrease_factor = 0;
            
            solver2.solver = "${{ matrix.competitor }}";
            BDS_list = ["DS", "DSPD", "CBDS", "PBDS", "RBDS"];
            NLOPT_list = ["nlopt_newuoa", "nlopt_bobyqa", "nlopt_cobyla"];

            if any(strcmpi("${{ matrix.competitor }}", BDS_list))
                solver2.sufficient_decrease_factor = 0;
            end

            if any(strcmpi("${{ matrix.competitor }}", NLOPT_list))
                parts = split("${{ matrix.competitor }}", '_');
                solver2.solver = "nlopt";
                solver2.Algorithm = char(parts(2));
            end

            parameters.solvers_options = {};

            parameters.solvers_options{1} = solver1;
            parameters.solvers_options{2} = solver2;
          
            profile(parameters);

            if parameters.random_initial_point
              parameters.num_random = 10;
            else
              parameters.num_random = 1;
            end
            
            profile(parameters);

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: test_bds_small
          path: ./tests/testdata
